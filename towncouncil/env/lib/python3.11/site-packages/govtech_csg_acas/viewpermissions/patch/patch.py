'''
@Project: Anyhow Code Also Secure (ACAS)
@Author: Zhao Zhigang
@FilePath: /src/acasapp/permission/patch/patch.py
@Description: Monkey-patching permission related functionalities
Copyright (c) 2022 by Institute for Infocomm Research (I2R), All Rights Reserved.
'''

import django

from .permission import patched_login_required, patched_permission_required, patched_user_passes_test


class Patcher:
    '''this class will do the patching and reverting of dangerous functions'''

    @classmethod
    def do_patch(cls):
        '''this function will monkey patch dangerous functions'''
        django.contrib.auth.decorators.user_passes_test = patched_user_passes_test
        django.contrib.auth.decorators.permission_required = patched_permission_required
        django.contrib.auth.decorators.login_required = patched_login_required

    @classmethod
    def revert(cls):
        '''this function will rever back the original functions'''
        django.contrib.auth.decorators.user_passes_test = django.contrib.auth.decorators.orig_user_passes_test_
        django.contrib.auth.decorators.permission_required = django.contrib.auth.decorators.orig_permission_required_
        django.contrib.auth.decorators.login_required = django.contrib.auth.decorators.orig_login_required_
